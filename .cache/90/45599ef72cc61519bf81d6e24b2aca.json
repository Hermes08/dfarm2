{"id":"node_modules/three/examples/jsm/shaders/FilmShader.js","dependencies":[{"name":"/Users/davidaguirre/Desktop/three/3dgallery/package.json","includedInParent":true,"mtime":1680129457970},{"name":"/Users/davidaguirre/Desktop/three/3dgallery/node_modules/three/package.json","includedInParent":true,"mtime":1680128919032}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilmShader = void 0;\n/**\n * Film grain & scanlines shader\n *\n * - ported from HLSL to WebGL / GLSL\n * https://web.archive.org/web/20210226214859/http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n *\n * Screen Space Static Postprocessor\n *\n * Produces an analogue noise overlay similar to a film grain / TV static\n *\n * Original implementation and noise algorithm\n * Pat 'Hawthorne' Shearon\n *\n * Optimized scanlines + noise version with intensity scaling\n * Georg 'Leviathan' Steinrohder\n *\n * This version is provided under a Creative Commons Attribution 3.0 License\n * http://creativecommons.org/licenses/by/3.0/\n */\n\nvar FilmShader = {\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'time': {\n      value: 0.0\n    },\n    'nIntensity': {\n      value: 0.5\n    },\n    'sIntensity': {\n      value: 0.05\n    },\n    'sCount': {\n      value: 4096\n    },\n    'grayscale': {\n      value: 1\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\t#include <common>\\n\\n\\t\\t// control parameter\\n\\t\\tuniform float time;\\n\\n\\t\\tuniform bool grayscale;\\n\\n\\t\\t// noise effect intensity value (0 = no effect, 1 = full effect)\\n\\t\\tuniform float nIntensity;\\n\\n\\t\\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\\n\\t\\tuniform float sIntensity;\\n\\n\\t\\t// scanlines effect count value (0 = no effect, 4096 = full effect)\\n\\t\\tuniform float sCount;\\n\\n\\t\\tuniform sampler2D tDiffuse;\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t// sample the source\\n\\t\\t\\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\\n\\n\\t\\t// make some noise\\n\\t\\t\\tfloat dx = rand( vUv + time );\\n\\n\\t\\t// add noise\\n\\t\\t\\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );\\n\\n\\t\\t// get us a sine and cosine\\n\\t\\t\\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\\n\\n\\t\\t// add scanlines\\n\\t\\t\\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\\n\\n\\t\\t// interpolate between source and result by intensity\\n\\t\\t\\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\\n\\n\\t\\t// convert to grayscale if desired\\n\\t\\t\\tif( grayscale ) {\\n\\n\\t\\t\\t\\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\\n\\n\\t\\t}\"\n};\nexports.FilmShader = FilmShader;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":19,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":21,"column":0}},{"generated":{"line":27,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":21,"column":6},"name":"FilmShader"},{"generated":{"line":27,"column":14},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":21,"column":16}},{"generated":{"line":27,"column":17},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":21,"column":19}},{"generated":{"line":28,"column":2},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":23,"column":1},"name":"uniforms"},{"generated":{"line":28,"column":10},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":23,"column":9}},{"generated":{"line":28,"column":12},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":23,"column":11}},{"generated":{"line":29,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":25,"column":2}},{"generated":{"line":29,"column":14},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":25,"column":12}},{"generated":{"line":29,"column":16},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":25,"column":14}},{"generated":{"line":30,"column":6},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":25,"column":16},"name":"value"},{"generated":{"line":30,"column":11},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":25,"column":21}},{"generated":{"line":30,"column":13},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":25,"column":23}},{"generated":{"line":31,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":25,"column":28}},{"generated":{"line":31,"column":5},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":25,"column":29}},{"generated":{"line":32,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":26,"column":2}},{"generated":{"line":32,"column":10},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":26,"column":8}},{"generated":{"line":32,"column":12},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":26,"column":10}},{"generated":{"line":33,"column":6},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":26,"column":12},"name":"value"},{"generated":{"line":33,"column":11},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":26,"column":17}},{"generated":{"line":33,"column":13},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":26,"column":19}},{"generated":{"line":34,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":26,"column":23}},{"generated":{"line":34,"column":5},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":26,"column":24}},{"generated":{"line":35,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":27,"column":2}},{"generated":{"line":35,"column":16},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":27,"column":14}},{"generated":{"line":35,"column":18},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":27,"column":16}},{"generated":{"line":36,"column":6},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":27,"column":18},"name":"value"},{"generated":{"line":36,"column":11},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":27,"column":23}},{"generated":{"line":36,"column":13},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":27,"column":25}},{"generated":{"line":37,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":27,"column":29}},{"generated":{"line":37,"column":5},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":27,"column":30}},{"generated":{"line":38,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":28,"column":2}},{"generated":{"line":38,"column":16},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":28,"column":14}},{"generated":{"line":38,"column":18},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":28,"column":16}},{"generated":{"line":39,"column":6},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":28,"column":18},"name":"value"},{"generated":{"line":39,"column":11},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":28,"column":23}},{"generated":{"line":39,"column":13},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":28,"column":25}},{"generated":{"line":40,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":28,"column":30}},{"generated":{"line":40,"column":5},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":28,"column":31}},{"generated":{"line":41,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":29,"column":2}},{"generated":{"line":41,"column":12},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":29,"column":10}},{"generated":{"line":41,"column":14},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":29,"column":12}},{"generated":{"line":42,"column":6},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":29,"column":14},"name":"value"},{"generated":{"line":42,"column":11},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":29,"column":19}},{"generated":{"line":42,"column":13},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":29,"column":21}},{"generated":{"line":43,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":29,"column":26}},{"generated":{"line":43,"column":5},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":29,"column":27}},{"generated":{"line":44,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":30,"column":2}},{"generated":{"line":44,"column":15},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":30,"column":13}},{"generated":{"line":44,"column":17},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":30,"column":15}},{"generated":{"line":45,"column":6},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":30,"column":17},"name":"value"},{"generated":{"line":45,"column":11},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":30,"column":22}},{"generated":{"line":45,"column":13},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":30,"column":24}},{"generated":{"line":46,"column":4},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":30,"column":26}},{"generated":{"line":47,"column":2},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":32,"column":1}},{"generated":{"line":47,"column":3},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":32,"column":2}},{"generated":{"line":48,"column":2},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":34,"column":1},"name":"vertexShader"},{"generated":{"line":48,"column":14},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":34,"column":13}},{"generated":{"line":48,"column":16},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":34,"column":15}},{"generated":{"line":48,"column":183},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":43,"column":4}},{"generated":{"line":49,"column":2},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":45,"column":1},"name":"fragmentShader"},{"generated":{"line":49,"column":16},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":45,"column":15}},{"generated":{"line":49,"column":18},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":45,"column":17}},{"generated":{"line":50,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":98,"column":0}},{"generated":{"line":50,"column":1},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":98,"column":1}},{"generated":{"line":51,"column":0},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":98,"column":2},"name":"exports"},{"generated":{"line":51,"column":7},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":98,"column":2}},{"generated":{"line":51,"column":8},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":98,"column":2},"name":"FilmShader"},{"generated":{"line":51,"column":18},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":98,"column":2}},{"generated":{"line":51,"column":21},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":98,"column":2},"name":"FilmShader"},{"generated":{"line":51,"column":31},"source":"node_modules/three/examples/jsm/shaders/FilmShader.js","original":{"line":98,"column":2}}],"sources":{"node_modules/three/examples/jsm/shaders/FilmShader.js":"/**\n * Film grain & scanlines shader\n *\n * - ported from HLSL to WebGL / GLSL\n * https://web.archive.org/web/20210226214859/http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n *\n * Screen Space Static Postprocessor\n *\n * Produces an analogue noise overlay similar to a film grain / TV static\n *\n * Original implementation and noise algorithm\n * Pat 'Hawthorne' Shearon\n *\n * Optimized scanlines + noise version with intensity scaling\n * Georg 'Leviathan' Steinrohder\n *\n * This version is provided under a Creative Commons Attribution 3.0 License\n * http://creativecommons.org/licenses/by/3.0/\n */\n\nconst FilmShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'time': { value: 0.0 },\n\t\t'nIntensity': { value: 0.5 },\n\t\t'sIntensity': { value: 0.05 },\n\t\t'sCount': { value: 4096 },\n\t\t'grayscale': { value: 1 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\t#include <common>\n\n\t\t// control parameter\n\t\tuniform float time;\n\n\t\tuniform bool grayscale;\n\n\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\tuniform float nIntensity;\n\n\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\tuniform float sIntensity;\n\n\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\tuniform float sCount;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t// sample the source\n\t\t\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\n\n\t\t// make some noise\n\t\t\tfloat dx = rand( vUv + time );\n\n\t\t// add noise\n\t\t\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );\n\n\t\t// get us a sine and cosine\n\t\t\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\n\n\t\t// add scanlines\n\t\t\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\n\n\t\t// interpolate between source and result by intensity\n\t\t\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\n\n\t\t// convert to grayscale if desired\n\t\t\tif( grayscale ) {\n\n\t\t\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n\n\t\t\t}\n\n\t\t\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\n\n\t\t}`,\n\n};\n\nexport { FilmShader };\n"},"lineCount":null}},"error":null,"hash":"0d3f2d04ca6c4419992113ccd0455d2c","cacheData":{"env":{}}}